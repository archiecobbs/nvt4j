<project name="nvt4j" default="build" basedir=".">

        <!-- Determine version -->
        <exec outputproperty="library.version" executable="git" logError="true" failonerror="true">
            <arg value="describe"/>
        </exec>
        <echo message=""/>
        <echo message="Release version is ${library.version}"/>
        <echo message=""/>

        <property name="jar.file" value="nvt4j-${library.version}.jar"/>
        <property name="src.dir" value="src"/>
        <property name="build.dir" value="build"/>
        <property name="api.dir" value="api"/>
        <property name="java.source.version" value="1.7"/>
        <property name="java.target.version" value="1.7"/>

        <path id="classpath">
                <pathelement location="${build.dir}"/>
        </path>

        <target name="init">
                <tstamp/>
                <mkdir dir="${build.dir}"/>
                <mkdir dir="${api.dir}"/>
        </target>

        <target name="build" depends="init">
                <javac includeantruntime="no"
                       compiler="modern"
                       deprecation="true"
                       source="${java.source.version}"
                       target="${java.target.version}"
                       srcdir="${src.dir}"
                       destdir="${build.dir}"
                       debug="true">
                    <classpath refid="classpath"/>
                    <compilerarg value="-Xlint:all"/>
                </javac>
        </target>

        <target name="api" depends="init">
                <javadoc sourcepath="${src.dir}" destdir="${api.dir}" use="true"
                  source="${java.source.version}" breakiterator="yes" failonerror="true"
                  windowtitle="NVT4J Release ${library.version}" doctitle="NVT4J Release ${library.version}">
                    <package name="nvt4j"/>
                    <arg value="-notimestamp"/>
                </javadoc>
        </target>

        <target name="release" depends="init">
                <delete file="${jar.file}"/>
                <delete dir="${api.dir}"/>
                <antcall target="clean"/>
                <antcall target="build"/>
                <jar destfile="${jar.file}" basedir="${build.dir}"/>
                <antcall target="api"/>
                <antcall target="clean"/>
        </target>

        <target name="clean">
                <delete dir="${build.dir}"/>
        </target>

</project>

